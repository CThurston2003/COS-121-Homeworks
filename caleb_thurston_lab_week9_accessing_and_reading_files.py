# -*- coding: utf-8 -*-
"""Caleb_Thurston_Lab_Week9_Accessing_and_reading_files.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FTB-AGR8jcknzVih5R6sqJx0oURGw0Ie

In this week's lab, we will focus on accessing and reading files. This lab explores the concepts related to our previous lecture (Oct 24, Monday).

First, let's review how we read files and the python syntax needed. 

Python provides built-in functions for creating, accessing, reading, writing, and closing files from the local storage. In this lab, we will only focus on accesing, reading, and closing a file in python. 

To open a file, we use the `open(File_Name, Access_Mode)` method, which has two parameters as follows: `File_Name` : this is the file we want to open. (ex. file.txt), and `Access_Mode` : this parameter defines if we want to `read (r)`, or `write (w)` the file or we want to `append(a)` new text at the end of the file. There are other `Access Modes` as well. We will not focus on them in this exercise. 

To open file.txt and read it, we use the following syntax: 

```
file_object=open("file.txt","r")
```
We created an `object` --> `file_object` for our file.txt and our access mode is `read` ("r")

***Note: Your file must be in the same directory where your python file is. Otherwise, you need to define the *path* of the file along with the file name***

Now, we can use the `file_object` to read the file. Python has three following in built functions to read the file: 

1. `read()`: Read the entire file and return them as string. 
2. `readline()`: Read each line of the file. 
2. `readlines()`: Reads all the lines and return them as each line a string element in a list.

Now that we know the syntax for opening and reading a file, let's run the program below. Before running it, you need to copy this colab file as well as the associated txt files to your colab notebooks folder on google drive. Otherwise, you will not be able to find the files referenced with your code.
"""

#Access/Reading File Example#

file_object = open("file.txt","r")   #we created an object file_object with the open() function, where our
                                     #file name is "file.txt", and the access mode is read "r"

print("This is the output of using read() function:\n", file_object.read())   #we are reading the file with the "read()" function anf printing the content

#since we already have read the whole file with read(), right now the file_object is at the end of the file.
#we use the "seek()" method to set the position of the file_object at the beginning of the file.  

file_object.seek(0) #seek() function is a built-in function and seek(0) means: 
                    #the file_object's position is in the beginning of the file (0th position)

print("This is the output of using readline() function: ", file_object.readline())  #As readline() only fetches each line at a time, 
                                                                                    #the output only prints the first line from the file.

file_object.seek(0) #Again, we use the seek(0) function to define the position of the file_object to the beginning of the file

print("This is the output of using readlines() function: ", file_object.readlines()) #We use the read_lines() function, which reads all the lines
                                                                                    #and returns each line a string element in a list

file_object.close() #we close the file with the close() function because we no longer need it.

"""Now we have some hands-on experience with opening and reading a file, and then printing the content of the whole file (`read()`), line by line (`readline()`), and all the lines as elements of a list (`readlines()`).

Now, lets delve a bit deeper on that.

Your first task is to open the "Exercise1.txt" file and use the `read()` function to read the file and print the content. This is exactly the same way we used the `read()` function in our previous program.

The output should be as follows:


```
This is a demo file for the first lab exercise. 
I am using read() function to print the content from a file. 
It prints all the content all at once! Wow! 
```
"""

#Lab Exercise 1#

#YOUR CODE IS HERE
file_object = open("Exercise1.txt", "r")
#Create an object "file_object" with the open() function, where our file name is "Exercise1.txt", and the access mode is read ("r")

print(file_object.read())

#Read the file using the "read()" function and print the content

file_object.close()
#Close the file by using the "close()" function since we no longer need the file"

"""Our second lab exercise is to print the `first 5 lines` from a file named "Exercise2.txt". Exercise2.txt contains the following text: 

```
Robert Mac|| Second Year||Rober.Mac
Gupta Saman|| Third Year|| Gupta.Saman
Ayush Bose || Second Year || Ayush.Bose
Mellisa Flemming || First Year || Mellisa.Flemming
Sam Manuel || Fourth Year ||Sam.Morse
Jacob Sorber || First Year ||Jacob.Sorber 
Maisha James ||Third Year ||Maisha.James
```

Your task is to only print the first 5 records (from Robert Mac to Sam Manuel). Since we are going to print the **first 5 lines** of the file, we can use the `readline()` function. As `readline()` only reads each line, we need to use a loop that will run 5 times to read the first 5 lines from the file. Follow the detailed instructions given below and write the code.

The output should show as follows: 

```
Robert Mac|| Second Year||Rober.Mac
Gupta Saman|| Third Year|| Gupta.Saman
Ayush Bose || Second Year || Ayush.Bose
Mellisa Flemming || First Year || Mellisa.Flemming
Sam Manuel || Fourth Year ||Sam.Morse
```
"""

#Lab Exercise 2#

#YOUR CODE IS HERE

file_object = open("Exercise2.txt","r")

def fileLoop():
  file_object.seek(0)
  for x in range(5):
    print(file_object.readline())
fileLoop()

file_object.close()

#Create an object "file_object" with the open() function, where our file name is "Exercise2.txt", and the access mode is read "r"

#Write a "for" loop that will iterate 5 times [Hint: for i in range (5)]

  #inside the loop, write a print statement to print each line of the file using readline() function

#Close the file by using the "close()" function since we no longer need the file"

"""Our third lab exercise is to use the `readline()` function and read the file "Exercise3.txt". "Exercise3.txt" file contains all the due dates of the Homeworks in COS 121 course. 

The content of the Excercise3.txt file is as follows: 

```
Cos121 Homework Due Dates: 
Homework1 due date is Sept. 26, 2022.
Homework2  due date is Oct. 07, 2022.
Homework3 due date is Oct. 28, 2022.
Homework4 due date is not published yet!
```
Your task is to only print the due date for Homework3. For this you need to use the "while" loop and readline() method. Follow the instructions below and write your code accordingly. The output should be as follows: 

`Homework3 due date is Oct. 28, 2022.`
"""

#Lab Exercise 3#
#YOUR CODE IS HERE

##Create an object "file_object" with the open() function, where our file name is "Exercise3.txt", and the access mode is read "r"
file_object = open("Exercise3.txt","r")
##Since we don't know the number of iterations, we will use a "while" loop that will iterate over each line in the file 
while file_object:
  line = file_object.readline()
  ##Inside the loop, we read the file using readline() method and store the content inside a variable named "line". [Hint: line = file_object.readline()]
  if "Homework3" in line:
    print(line)
    break
  ##Now we will check if "Homework3" is in the line. For this,
  ##write an "if" condition, that checks if the "Homework3" string is in the line

      #Inside the if condition: write a print statement to print the line if it contains Homework3
      #After we print the line, we can "break" the loop by using the break keyword. 
       #break keywords enables you to stop the program!

file_object.close()
#now close the file_object using the close() function